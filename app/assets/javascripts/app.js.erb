// Initialization Variables

function getURLParameter(name) {
	return decodeURI(
		(RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,null])[1]
    );
}

function formatPhone(phone){
    return phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
}

var philadelphia = {
	name: 'Philadelphia',
	latlng: new google.maps.LatLng(39.9522, -75.1642)
}

var newyork = {
	name: 'New York',
	latlng: new google.maps.LatLng(40.7142, -74.0064)
}

// We default the city to New York, but when initializing the map
// we check if a city param is passed in the URL.
var city = newyork;
var urlCity = getURLParameter('city');
var startLatlng;
var allMarkers = [];

var App = {
  init : function() {
    App.header.init();
    //App.renderHistory();
    this.render();
    
    
    $('.facility ').on('click', function(e) {
      e.preventDefault();
      
      // $('#facilities .expanded').toggleClass('expanded', 400);
      // $(this).parents('tr').toggleClass('expanded', 400).promise().done(function(e) {
      //   $(this).find('dl').fadeIn();
      // });
      
      $('#facilities .expanded').toggleClass('expanded');
      $(this).toggleClass('expanded');
      
    });
    
    
  },

  render : function() {
    
  },
  
  renderResults : function() {
    var template_source   = $('#facility-template').html()
      , template          = Handlebars.compile(template_source);
      
      var image = new google.maps.MarkerImage("/assets/marker.png",
        // This marker is 20 pixels wide by 32 pixels tall.
        new google.maps.Size(20, 20),
        // The origin for this image is 0,0.
        new google.maps.Point(0,0),
        // The anchor for this image is the base of the flagpole at 0,32.
        new google.maps.Point(0, 20));
    
    
    var infowindow = new google.maps.InfoWindow({
          isHidden:false
          ,pane: "mapPane"
          ,enableEventPropagation: true,
          disableAutoPan: false
        });
    
   	google.maps.event.addListener(App.map.mapObject, 'click', (function() {
   		infowindow.close();
   	}));

    
	$.each(App.map.facilities, function(i) {
        this.name = this.hp_provider_legal_name ?  this.hp_provider_legal_name : this.hp_provider_name;
		
		this.cycle = i%2 ? "even" : "odd";
      	this.id    = this.qs_providerID;
      	this.row   = i + 1;
      	this.savings = 250 - this.co_pay;
      	
      	this.phone =   formatPhone(this.provider_address.hp_telephone_number);
		
		//console.log(this);
		
		//console.log(startLatlng);
		var R = 6.371; // km
		var lat2 = 39.9531865;
		var lon2 = -75.1749671;

		this.distance =  Math.acos(Math.sin(this.provider_address.qs_latitude) * Math.sin(lat2) + 
                  Math.cos(this.provider_address.qs_latitude) * Math.cos(lat2) *
                  Math.cos(lon2-this.provider_address.qs_longitude)) * R;
		this.distance = Math.round(this.distance * 0.621371) ;
		 
		this.address = this.provider_address.hp_address_line1 + " " + this.provider_address.hp_address_line2;
				console.log(this.hp_type_code);
		
		
		this.hp_type_code = this.hp_type_code.replace(/^\s+|\s+$/g,'')

		switch(this.hp_type_code){
			case 'RC':
			this.co_pay = 35;
			this.type = 'retail_clinic';
			break;
			
			case 'TM':
			this.co_pay = 25;
			this.type = 'telemedicine';
			break;
			
			case 'ER':
			this.co_pay = 250;
			this.type = 'urgent_care';
			break;
			
			case 'UC':
			this.co_pay = 50;
			this.type = 'urgent_care';
			break;
		}
		
		var min = 2;
		var max = 5;
		
		this.rating = Math.floor(Math.random() * (max - min + 1)) + min;
		
		
		var min_wait = 15;
		var max_wait = 50;
		
		this.wait_time = Math.floor(Math.random() * (max_wait - min_wait + 1)) + min_wait;
		
		
		this.wait_time = Math.round( this.wait_time/ 5) * 5
		
		
		
		var min_stay = 30;
		var max_stay = 75;
		
		this.stay_length = Math.floor(Math.random() * (max_stay - min_stay + 1)) + min_stay;
		
		
		this.stay_length = Math.round( this.stay_length/ 5) * 5
		
		
		this.savings = 250;
		
		var result = template(this);
		
		var content = "<h4 style='padding:0 20px 10px 0'>" + this.name + "</h4><small>"+this.address+"</small><br/><small>Phone : "+formatPhone(this.provider_address.hp_telephone_number)+"</small><br/><small>9AM-6PM</small>";
		$(result).appendTo($('#facilities tbody'));
      
        
      	if(this.provider_address.qs_latitude){
      		//var latLongTemp = this.provider_address.qs_longitude + "," + ;
      		//console.log(latLongTemp); 
      		
      		var position =  new google.maps.LatLng(this.provider_address.qs_latitude, this.provider_address.qs_longitude);
      		console.log(App.map.mapObject);
      		console.log(image);
      		console.log(position);
      		var marker = new google.maps.Marker({
      			map:App.map.mapObject,
      			position: new google.maps.LatLng(this.provider_address.qs_longitude, this.provider_address.qs_latitude),   
      			icon:image
      		});
      		
      		
      		
	  		 google.maps.event.addListener(marker, 'click', (function(marker, i) {
	            var contentString = ""

	            return function() {
	                infowindow.setContent(content);
	                //App.map.mapObject.setCenter(marker.lat-100, marker.lng-100);
	                infowindow.open(map, marker);
	                // trying to close the winddow on click
		 			map.panTo(marker.getLatLng());

	            }
	            })(marker, i)); //end add marker listener

			 
				      		
      		allMarkers.push(marker);
		}      		
	});
	
	console.log(allMarkers);
  },
  
  renderHistory  : function() {
    var template_source   = $('#visit-template').html()
      , template          = Handlebars.compile(template_source);
      
      
    
    $('#history tbody').empty();
    
    $.each(App.account.history, function(i) {
      this.cycle = i%2 ? "odd" : "even";
      var result = template(this);
      
      $(result).appendTo($('#history tbody'))
    });
  }
}


App.categories = [
  {
      name        : "Urgent Care"
    , description : "Usually have extended hours, designed to be used for minor illnesses and limited preventative care as well as more acute (but not serious or life threatening) illnesses and injuries that are beyond the abilities of a regular walk-in clinic"
    , treatments  : [ "Broken Bones", "Ear Infection", "Bladder Infection"]
    , html_class  : "urgent_care"
  },
  {
      name        : "Telemedicine"
    , description : "Usually have extended hours and use audio/video communications as well as still or live images for diagnosis and treatment of uncomplicated, minor illnesses"
    , treatments  : [ "Joint or Back Pain", "Ear Infection", "Bladder Infection", "Pulmonary Infection"]
    , html_class  : "telemedicine"
  },
  {
      name        : "Walk In Clinic"
    , description : "Usually have extended hours, may be staffed by physicians, nurse practitioners and physicians' assistants, designed to be used for minor illnesses and limited preventative care"
    , treatments  : [ "Ear Infection", "Bladder Infection", "Allergies", "Skin Infection", "Joint or Back Pain", "Bronchitis"]
    , html_class  : "walk_in_clinic"
  },
  {
      name        : "Retail Clinic"
    , description : "Usually located in supermarkets and pharmacies with extended hours, staffed by nurse practitioners and physicians' assistants, designed to be used for minor illnesses and limited preventative care"
    , treatments  : [ "Cold & Flu", "Sore Throat", "Allergies", "Pain Relief"]
    , html_class  : "retail_clinic"
  },
  {
      name        : "Urgent Dental"
    , description : "Dental clinics with extended hours, offering same-day appointments as well as seeing walk-in patients for routine preventative care, treatment of toothaches, pain around the teeth, gums, or the jaw"
    , treatments  : [ "Toothache", "Abcess"]
    , html_class  : "urgent_dental"
  },
  {
      name        : "24h Pharmacy"
    , description : "Pharmacies with 24-hour service for obtaining prescription medications, related health care products, and other remedies which may be needed"
    , treatments  : [ "Cold & Flu", "Sore Throat", "Allergies", "Pain Relief"]
    , html_class  : "pharmacy_24h"
  }
]


App.header = {
  el          : 'body > header',
  provider_el : '#provider-logo',
  nav_el      : '#main-nav',
  
  init        : function() {
    $('#account').on('click', this.toggle);
    
    $(this.nav_el).find('a').on('click', function(e) {
      e.stopPropagation();
      $(App.header.nav_el).find('a.active').removeClass('active');
      $(this).addClass('active');
    })
    
  },
  toggle      : function(e, data) {
    e.preventDefault();
    
    if($(App.header.el).hasClass('expanded')) {
      $('#history').stop(true, true).fadeOut();
    }
    $(App.header.el).toggleClass('expanded', 900).promise().done(function(e) {
      if($(this).hasClass('expanded')) {
        
        $('#history').stop(true, true).fadeIn();
      } 
    });
    // $(App.header.provider_el).toggleClass('collapsed', 1100);
    
 
    
  }
}


App.map = {
  canvas      : '#map_canvas',
  init        : function(startLatLng) {
  	//var startLat = geoplugin_latitude();
  	//var startLong = geoplugin_longitude();
    //var startLatLng = new google.maps.LatLng(startLat, startLong);
    
    // We use the zipcode if it's set in the session, 
    // otherwise we use the current city.
    var startLatLng = city.latlng;
    
   // alert('din');
    //$('aside').html(startLatlng);
    
  	var myOptions = {
			zoom: 11,
			center: startLatLng,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		}
   
  	this.mapObject =  new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    
        
    if (zipCode != null){
    	 geocoder = new google.maps.Geocoder();
	  	 geocoder.geocode( { 'address': String(zipCode)}, function(results, status) {
	      if (status == google.maps.GeocoderStatus.OK) {
			
	      	latLng = results[0].geometry.location;
	      	App.map.mapObject.setCenter(latLng);
	      	startLatlng = latLng;
	     	//App.map.mapObject.setCenter([75.1749671, 39.9531865]);
	     		
	      } else {
	        alert("Geocode was not successful for the following reason: " + status);
	      }
	      
  			

	      
	    });	
    	
    }
   
  },
  
   facilities  : [
    // {
        // name        : "Northeastern ReadyCare"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 5
      // , distance    : "3.2"
      // , wait_time   : "20"
      // , stay_length : "5 mn"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "urgent_care"
      // , providers   : "Physicians, Nurse Practitioners and Physician Assistants"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Accepting patients of all ages"
      // , telephone   : "800-789-7366"
      // , services    : [ 'lab', 'pharmacy']
      // , latlng      : '40.738378,-73.977165'
    // },
//     
    // {
        // name        : "John F Lozowski, DO Family Medicine"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 2
      // , distance    : "1"
      // , wait_time   : "20"
      // , stay_length : "15 mn"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "walk_in_clinic"
      // , providers   : "Board-certified Internal Medicine, Pediatric, Family Medicine and Emergency Medicine Physicians"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Non-emergency medical issue including: Cold and flu symptoms, Bronchitis, Allergies, Poison ivy, Pink eye, Urinary tract infection, Respiratory infection, Sinus problems, and Ear infection."
      // , telephone   : "800-789-7366"
      // , services    : ['lab', 'pharmacy']
      // , latlng      : '40.737078,-73.982065'
    // },
//     
    // {
        // name        : "Penn Presbyterian"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 4
      // , distance    : "0.93"
      // , wait_time   : "20"
      // , stay_length : "1h"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "urgent_care"
      // , providers   : "Physicians, Nurse Practitioners and Physician Assistants"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Accepting patients of all ages"
      // , telephone   : "800-789-7366"
      // , services    : ['pharmacy']
      // , latlng      : '40.737178,-73.977565'
    // },
//     
    // {
        // name        : "Concentra Urgent Care"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 3
      // , distance    : "0.4"
      // , wait_time   : "20"
      // , stay_length : "30 mn"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "retail_clinic"
      // , providers   : "Physicians, Nurse Practitioners and Physician Assistants"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Accepting patients of all ages"
      // , telephone   : "800-789-7366"
      // , services    : [ 'lab', 'pharmacy']
      // , latlng      : '40.739078,-73.975565'
    // },
//     
    // {
        // name        : "Take Care Clinics at Walgreens"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 3
      // , distance    : "0.4"
      // , wait_time   : "20"
      // , stay_length : "15 mn"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "retail_clinic"
      // , providers   : "Physicians, Nurse Practitioners and Physician Assistants"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Accepting patients of all ages"
      // , telephone   : "800-789-7366"
      // , services    : ['lab']
      // , latlng      : '40.756379,-73.984567'
    // },
//     
    // {
        // name        : "CVS Minute Clinic"
      // , address     : "2301 E Allegheny Ave, Suite 150"
      // , rating      : 1
      // , distance    : "0.4"
      // , wait_time   : "20"
      // , stay_length : "1h"
      // , co_pay      : "50"
      // , savings     : "40"
      // , type        : "urgent_care"
      // , providers   : "Physicians, Nurse Practitioners and Physician Assistants"
      // , hours       : "Open 24hrs a day 365 days a year"
      // , description    : "Accepting patients of all ages"
      // , telephone   : "800-789-7366"
      // , services    : []
      // , latlng      : '40.748379,-73.985563'
    // }
//   
//   
  ]
}


App.account = {
  history : [
    {
      date        : '12/10/2012'
      , facility  : 'Care Bear Hospital'
      , type      : 'ER'
      , condition : 'Brain Damage'
      , avoidable : 'no'
      , savings   : 500
    },
    {
      date        : '10/09/2012'
      , facility  : 'M.A.S.H'
      , type      : 'Walk-in Clinic'
      , condition : 'Crazy legs'
      , avoidable : 'yes'
      , savings   : 30
    },
    {
      date        : '05/08/2012'
      , facility  : 'Bellevue Hospital'
      , type      : 'ER'
      , condition : 'Not-so-serious OCD'
      , avoidable : 'yes'
      , savings   : 0
    }
  ]
}
$(document).ready(function(e) {


  
  
  App.init();
  
 
  pageId = $('body').attr('id');
  switch(pageId) {
    
    case 'facilities_index':
      
      // If no zipcode is specified in the session
      // We check if a city has been specified in the URL and center to that city.
      if(urlCity == 'newyork'){
      	city = newyork;
      }
      else if(urlCity =='philadelphia'){
      	city = philadelphia;
      }
      else{
      	
      	// The default city is New York
      }
      
      $('#categories li').on('click', function(e) {
        $(this).siblings('.selected').removeClass('selected');
        $(this).addClass('selected');
      });
      
      var cat = getURLParameter('category') || 'urgent_care';
      
      $('#categories li a.'+cat).parent().addClass('selected');
      App.map.init();
      
      //console.log(geoplugin_city());
      // Fetch the results for the geolocated city, and on return add them to the map
	  $.ajax({
	  	url: '/facilities/locate',
	  	data:{
	  		//city : city.name
	  	},
	  	success:function(data){
	  		console.log(data);
	  		console.log(data);
	  		App.map.facilities = data
	  		App.renderResults();
	  	}
	  });	      
    break;  
      
      
      
      
    case 'facilities_show':
      
      App.map.init();
      var template_source   = $('#facility-show-template').html()
        , template          = Handlebars.compile(template_source);
		
		
		//showProviderAddress.name = showProviderAddress.provider.hp_provider_legal_name ?  showProviderAddress.provider.hp_provider_legal_name : showProviderAddress.provider.hp_provider_name;

		// TODO mock
		// showProviderAddress.address = showProviderAddress.hp_address_line1 + " " + showProviderAddress.hp_address_line2;
		
		$.extend(showProviderAddress, {rating : 5, distance : "0" , wait_time : "20" , stay_length : "40" , co_pay : "25" , savings : "8" , type : "telemedicine" , providers : "Physicians" , hours : ["24 hours"] , description : "Non-emergency medical issue including: Cold and flu symptoms, Bronchitis, Allergies, Poison ivy, Pink eye, Urinary tract infection, Respiratory infection, Sinus problems, and Ear infection" , telephone : "(800) TELEDOC" , services : ['lab', 'pharmacy'] }); 
		

        var result = template(showProviderAddress);
        
        $(result).appendTo($('#facility'));
    break;
    
 	case 'home_index':
      var template_source   = $('#category-template').html()
        , template          = Handlebars.compile(template_source)
        console.log(App.categories);
      $.each(App.categories, function(i) {
        this.id = i;
        $('#categories ul').append($(template(this)));
      });
      
      $('#categories li').on({

        
        click     : function(e) {
          e.preventDefault();
          $('#overlay').show();
          $('#facility_type_details').html($(this).html())
          
        }
      });
      
      $('a.form_toggle').on('click', function(e) {
        e.preventDefault();
        $(this).parents('.specific').hide();
        $($(this).attr('href')).show();
      });
      
      
      $('#warning').delay(500).animate({
        bottom        : 30
      }, {
        easing   : 'easeOutBounce',
        duration : 1200
      });
      
      break;
    case 'categories_show':
      var template_source   = $('#category-template').html()
        , template          = Handlebars.compile(template_source)
        , id                = Number(getURLParameter('id')) || 0
        , category          = App.categories[id]
        
   
        $('#page .wrap').append($(template(category)));
      break;
    default:
  }
  
    
  $('#overlay .close').on('click', function(e) {
    $('#overlay').hide();
  });

  
  // Quick addition, this is horrible, must refactor
  $('.hold').live('click', function(e) {
    
    $('#overlay').show();
    $('#overlay h4').html($(this).data('name'));
    $('#overlay .address').html($(this).data('address'));
    $('#user_form').show();
    
    $('#overlay_msg').hide();
  });
  
  $('#overlay #user_form').submit(function(e) {
    e.preventDefault();
    $(this).hide();
    $('#overlay_msg').show();
  })
  

  
  
  
});